---
- hosts: localhost
  connection: local

  tasks:

## DNF
    - name: "REDHAT - Check packages to upgrade"
      ansible.builtin.dnf5:
        list: updates
      register: packages
      become: true

    - name: "REDHAT - Show packages to upgrade"
      ansible.builtin.debug:
        msg: >-
          {%- set output=[] -%}
          {%- for p in packages.results -%}
          {{ output.append('%-40s' % (p.name ~ '-' ~ p.version) ~ ' | repo: ' ~ p.repo) }}
          {%- endfor -%}
          {{ output }}

    - name: Upgrade RPM packages with DNF5
      ansible.builtin.dnf5:
        name: "*"
        state: latest
        update_cache: true
      become: true

    - name: "REDHAT - Autoremove unneeded packages installed as dependencies"
      ansible.builtin.dnf:
        autoremove: yes
      become: true

## Flatpaks
    - name: Check for flatpak
      ansible.builtin.stat:
        path: "/usr/bin/flatpak"
      register: fp_service_status

    - name: Update flatpak packages
      command: /usr/bin/flatpak update -y
      register: flatout
      when: fp_service_status.stat.exists

    - name: Output from flatpak-command
      debug: msg="{{ flatout.stdout_lines }}"
      when: flatout.stdout_lines is defined

## Distrobox
    - name: check if distrobox is installed
      ansible.builtin.stat:
        path: /usr/bin/distrobox
      register: distroboxInstalled

    - name: Upgrade installed distroboxes
      ansible.builtin.shell: distrobox upgrade --all
      register:  distroboxUpgradeOutput
      when: distroboxInstalled is defined

    - name: Show distrobox upgrades
      ansible.builtin.debug:
        var: distroboxUpgradeOutput.stdout_lines
      when: distroboxUpgradeOutput is defined
